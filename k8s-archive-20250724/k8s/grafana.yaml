---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: demo-app
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: InfluxDB
      type: influxdb
      access: proxy
      url: http://influxdb:8086
      isDefault: true
      jsonData:
        version: Flux
        organization: rackspace
        defaultBucket: power_metrics
        tlsSkipVerify: true
      secureJsonData:
        token: my-super-secret-auth-token
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: demo-app
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-power
  namespace: demo-app
data:
  power-monitoring.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Power Line Monitoring",
        "tags": ["power", "energy", "eagle"],
        "timezone": "browser",
        "schemaVersion": 16,
        "version": 0,
        "refresh": "5s",
        "panels": [
          {
            "datasource": "InfluxDB",
            "fieldConfig": {
              "defaults": {
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 3},
                    {"color": "red", "value": 5}
                  ]
                },
                "unit": "kwatt"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
            "id": 1,
            "options": {
              "orientation": "auto",
              "reduceOptions": {
                "values": false,
                "calcs": ["lastNotNull"]
              },
              "showThresholdLabels": false,
              "showThresholdMarkers": true
            },
            "pluginVersion": "7.0.0",
            "targets": [
              {
                "query": "from(bucket: \"power_metrics\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"demand_kw\")\n  |> last()",
                "refId": "A"
              }
            ],
            "title": "Current Power Demand",
            "type": "gauge"
          },
          {
            "datasource": "InfluxDB",
            "fieldConfig": {
              "defaults": {
                "mappings": [],
                "unit": "kwatth"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
            "id": 2,
            "options": {
              "colorMode": "value",
              "graphMode": "area",
              "justifyMode": "auto",
              "orientation": "auto",
              "reduceOptions": {
                "values": false,
                "calcs": ["lastNotNull"]
              }
            },
            "pluginVersion": "7.0.0",
            "targets": [
              {
                "query": "from(bucket: \"power_metrics\")\n  |> range(start: -24h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"net_consumption_kwh\")\n  |> last()",
                "refId": "A"
              }
            ],
            "title": "Total Energy Consumed",
            "type": "stat"
          },
          {
            "datasource": "InfluxDB",
            "fieldConfig": {
              "defaults": {
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {"color": "green", "value": null}
                  ]
                },
                "unit": "kwatt"
              }
            },
            "gridPos": {"h": 10, "w": 24, "x": 0, "y": 8},
            "id": 3,
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom"
              },
              "tooltip": {
                "mode": "single"
              }
            },
            "targets": [
              {
                "query": "from(bucket: \"power_metrics\")\n  |> range(start: -1h)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"demand_kw\")",
                "refId": "A"
              }
            ],
            "title": "Power Demand Over Time",
            "type": "timeseries"
          }
        ]
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SERVER_ROOT_URL
          value: "%(protocol)s://%(domain)s:%(http_port)s/"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "false"
        volumeMounts:
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboards-provider
          mountPath: /etc/grafana/provisioning/dashboards
        - name: dashboards
          mountPath: /var/lib/grafana/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: dashboards-provider
        configMap:
          name: grafana-dashboards
      - name: dashboards
        configMap:
          name: grafana-dashboard-power
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: demo-app
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30300
  type: NodePort