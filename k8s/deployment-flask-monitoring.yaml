apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app-monitoring
  namespace: demo-app
  labels:
    app: demo-app-monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-app-monitoring
  template:
    metadata:
      labels:
        app: demo-app-monitoring
    spec:
      serviceAccountName: default
      containers:
      - name: flask-app
        image: python:3.11-slim
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        env:
        # Pod information
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # InfluxDB configuration
        - name: INFLUXDB_URL
          value: "http://influxdb:8086"
        - name: INFLUXDB_TOKEN
          value: "my-super-secret-auth-token"
        - name: INFLUXDB_ORG
          value: "rackspace"
        - name: INFLUXDB_BUCKET
          value: "power_metrics"
        envFrom:
        - configMapRef:
            name: demo-app-config
        command: ["/bin/bash"]
        args:
          - -c
          - |
            cd /app
            pip install -r requirements.txt
            gunicorn --bind 0.0.0.0:5000 --workers 2 --threads 2 app:app
        volumeMounts:
        - name: app-code
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 5
      volumes:
      - name: app-code
        configMap:
          name: flask-app-code
---
apiVersion: v1
kind: Service
metadata:
  name: demo-app-monitoring
  namespace: demo-app
spec:
  selector:
    app: demo-app-monitoring
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30500
  type: NodePort